[{"data":1,"prerenderedAt":2931},["ShallowReactive",2],{"navigation":3,"-docs-utils-query-collection":236,"-docs-utils-query-collection-surround":2926},[4,24,51,73,95,113,159,172,206],{"title":5,"path":6,"stem":7,"children":8,"icon":23},"入门","/docs/getting-started","docs/1.getting-started/1.index",[9,11,15,19],{"title":10,"path":6,"stem":7},"介绍",{"title":12,"path":13,"stem":14},"安装","/docs/getting-started/installation","docs/1.getting-started/2.installation",{"title":16,"path":17,"stem":18},"配置","/docs/getting-started/configuration","docs/1.getting-started/3.configuration",{"title":20,"path":21,"stem":22},"迁移","/docs/getting-started/migration","docs/1.getting-started/4.migration","i-lucide-square-play",{"title":25,"icon":26,"path":27,"stem":28,"children":29,"page":50},"集合","i-lucide-database","/docs/collections","docs/2.collections",[30,34,38,42,46],{"title":31,"path":32,"stem":33},"定义","/docs/collections/define","docs/2.collections/1.define",{"title":35,"path":36,"stem":37},"类型","/docs/collections/types","docs/2.collections/2.types",{"title":39,"path":40,"stem":41},"来源","/docs/collections/sources","docs/2.collections/3.sources",{"title":43,"path":44,"stem":45},"验证器","/docs/collections/validators","docs/2.collections/4.validators",{"title":47,"path":48,"stem":49},"从组件继承","/docs/collections/inherit-schema-from-component","docs/2.collections/5.inherit-schema-from-component",false,{"title":52,"icon":53,"path":54,"stem":55,"children":56,"page":50},"文件","i-lucide-file","/docs/files","docs/3.files",[57,61,65,69],{"title":58,"path":59,"stem":60},"Markdown","/docs/files/markdown","docs/3.files/1.markdown",{"title":62,"path":63,"stem":64},"YAML","/docs/files/yaml","docs/3.files/2.yaml",{"title":66,"path":67,"stem":68},"JSON","/docs/files/json","docs/3.files/3.json",{"title":70,"path":71,"stem":72},"CSV","/docs/files/csv","docs/3.files/4.csv",{"title":74,"icon":75,"path":76,"stem":77,"children":78,"page":50},"查询工具","i-lucide-square-function","/docs/utils","docs/4.utils",[79,83,87,91],{"title":80,"path":81,"stem":82},"queryCollection","/docs/utils/query-collection","docs/4.utils/1.query-collection",{"title":84,"path":85,"stem":86},"queryCollectionNavigation","/docs/utils/query-collection-navigation","docs/4.utils/2.query-collection-navigation",{"title":88,"path":89,"stem":90},"queryCollectionItemSurroundings","/docs/utils/query-collection-item-surroundings","docs/4.utils/3.query-collection-item-surroundings",{"title":92,"path":93,"stem":94},"queryCollectionSearchSections","/docs/utils/query-collection-search-sections","docs/4.utils/4.query-collection-search-sections",{"title":96,"icon":97,"path":98,"stem":99,"children":100,"page":50},"组件","i-lucide-square-code","/docs/components","docs/5.components",[101,105,109],{"title":102,"path":103,"stem":104},"内容渲染器","/docs/components/content-renderer","docs/5.components/0.content-renderer",{"title":106,"path":107,"stem":108},"插槽","/docs/components/slot","docs/5.components/1.slot",{"title":110,"path":111,"stem":112},"文章组件","/docs/components/prose","docs/5.components/2.prose",{"title":114,"icon":115,"path":116,"stem":117,"children":118,"page":50},"部署","i-lucide-cloud-upload","/docs/deploy","docs/6.deploy",[119,123,127,131,135,139,143,147,151,155],{"title":120,"path":121,"stem":122},"服务器","/docs/deploy/server","docs/6.deploy/1.server",{"title":124,"path":125,"stem":126},"静态","/docs/deploy/static","docs/6.deploy/10.static",{"title":128,"path":129,"stem":130},"无服务器","/docs/deploy/serverless","docs/6.deploy/2.serverless",{"title":132,"path":133,"stem":134},"NuxtHub","/docs/deploy/nuxthub","docs/6.deploy/3.nuxthub",{"title":136,"path":137,"stem":138},"Cloudflare Pages","/docs/deploy/cloudflare-pages","docs/6.deploy/4.cloudflare-pages",{"title":140,"path":141,"stem":142},"Cloudflare Workers","/docs/deploy/cloudflare-workers","docs/6.deploy/5.cloudflare-workers",{"title":144,"path":145,"stem":146},"Vercel","/docs/deploy/vercel","docs/6.deploy/6.vercel",{"title":148,"path":149,"stem":150},"Netlify","/docs/deploy/netlify","docs/6.deploy/7.netlify",{"title":152,"path":153,"stem":154},"AWS Amplify","/docs/deploy/aws-amplify","docs/6.deploy/8.aws-amplify",{"title":156,"path":157,"stem":158},"Docker","/docs/deploy/docker","docs/6.deploy/9.docker",{"title":160,"icon":115,"path":161,"stem":162,"children":163,"page":50},"Examples & Integrations","/docs/integrations","docs/7.integrations",[164,168],{"title":165,"path":166,"stem":167},"I18n module","/docs/integrations/i18n","docs/7.integrations/01.i18n",{"title":169,"path":170,"stem":171},"LLMs 模块","/docs/integrations/llms","docs/7.integrations/02.llms",{"title":173,"icon":174,"path":175,"stem":176,"children":177,"page":50},"高级用法","i-lucide-code-xml","/docs/advanced","docs/8.advanced",[178,182,186,190,194,198,202],{"title":179,"path":180,"stem":181},"全文搜索","/docs/advanced/fulltext-search","docs/8.advanced/1.fulltext-search",{"title":183,"path":184,"stem":185},"原始内容","/docs/advanced/raw-content","docs/8.advanced/2.raw-content",{"title":187,"path":188,"stem":189},"SQL 存储","/docs/advanced/database","docs/8.advanced/3.database",{"title":191,"path":192,"stem":193},"调试工具","/docs/advanced/tools","docs/8.advanced/4.tools",{"title":195,"path":196,"stem":197},"钩子","/docs/advanced/hooks","docs/8.advanced/5.hooks",{"title":199,"path":200,"stem":201},"自定义来源","/docs/advanced/custom-source","docs/8.advanced/6.custom-source",{"title":203,"path":204,"stem":205},"转换器","/docs/advanced/transformers","docs/8.advanced/8.transformers",{"title":207,"icon":208,"path":209,"stem":210,"children":211,"page":50},"Nuxt Studio","i-lucide-monitor","/docs/studio","docs/9.studio",[212,216,220,224,228,232],{"title":213,"path":214,"stem":215},"设置","/docs/studio/setup","docs/9.studio/1.setup",{"title":217,"path":218,"stem":219},"同步","/docs/studio/github","docs/9.studio/2.github",{"title":221,"path":222,"stem":223},"内容编辑器","/docs/studio/content","docs/9.studio/3.content",{"title":225,"path":226,"stem":227},"媒体库","/docs/studio/medias","docs/9.studio/4.medias",{"title":229,"path":230,"stem":231},"应用配置","/docs/studio/config","docs/9.studio/5.config",{"title":233,"path":234,"stem":235},"本地调试","/docs/studio/debug","docs/9.studio/6.debug",{"id":237,"title":80,"body":238,"description":2920,"extension":2921,"layout":2922,"links":2922,"meta":2923,"navigation":514,"path":81,"seo":2924,"stem":82,"__hash__":2925},"docs/docs/4.utils/1.query-collection.md",{"type":239,"value":240,"toc":2900},"minimark",[241,245,261,270,431,441,445,448,705,711,714,731,737,750,761,851,857,860,872,985,991,994,1085,1247,1253,1256,1267,1458,1464,1467,1478,1658,1664,1667,1684,1786,1792,1795,1807,1897,1903,1906,1918,2013,2018,2021,2026,2101,2106,2109,2117,2192,2198,2201,2299,2309,2438,2441,2447,2723,2725,2735,2849,2896],[242,243,244],"h2",{"id":244},"用法",[246,247,248,249,252,253,256,257,260],"p",{},"使用自动导入的 ",[250,251,80],"code",{}," 来查找集合中的内容。这里假设你已在 ",[250,254,255],{},"content.config.ts"," 中定义了 ",[250,258,259],{},"docs"," 集合。",[246,262,263,264,269],{},"如果你还未定义任何集合，请查看 ",[265,266,268],"a",{"href":267},"/docs/collections/define#defining-collections","如何定义集合","。",[271,272,278],"pre",{"className":273,"code":274,"filename":275,"language":276,"meta":277,"style":277},"language-vue shiki shiki-themes material-theme-lighter material-theme material-theme-palenight","\u003Cscript>\nconst route = useRoute()\nconst { data: page } = await useAsyncData(route.path, () => {\n  return queryCollection('docs').path(route.path).first()\n})\n\u003C/script>\n","pages/[...slug.vue","vue","",[250,279,280,296,317,368,413,421],{"__ignoreMap":277},[281,282,285,289,293],"span",{"class":283,"line":284},"line",1,[281,286,288],{"class":287},"sMK4o","\u003C",[281,290,292],{"class":291},"swJcz","script",[281,294,295],{"class":287},">\n",[281,297,299,303,307,310,314],{"class":283,"line":298},2,[281,300,302],{"class":301},"spNyl","const",[281,304,306],{"class":305},"sTEyZ"," route ",[281,308,309],{"class":287},"=",[281,311,313],{"class":312},"s2Zo4"," useRoute",[281,315,316],{"class":305},"()\n",[281,318,320,322,325,328,331,334,337,340,344,347,350,353,356,359,362,365],{"class":283,"line":319},3,[281,321,302],{"class":301},[281,323,324],{"class":287}," {",[281,326,327],{"class":291}," data",[281,329,330],{"class":287},":",[281,332,333],{"class":305}," page ",[281,335,336],{"class":287},"}",[281,338,339],{"class":287}," =",[281,341,343],{"class":342},"s7zQu"," await",[281,345,346],{"class":312}," useAsyncData",[281,348,349],{"class":305},"(route",[281,351,352],{"class":287},".",[281,354,355],{"class":305},"path",[281,357,358],{"class":287},",",[281,360,361],{"class":287}," ()",[281,363,364],{"class":301}," =>",[281,366,367],{"class":287}," {\n",[281,369,371,374,377,380,383,386,388,391,393,395,397,400,402,404,406,408,411],{"class":283,"line":370},4,[281,372,373],{"class":342},"  return",[281,375,376],{"class":312}," queryCollection",[281,378,379],{"class":291},"(",[281,381,382],{"class":287},"'",[281,384,259],{"class":385},"sfazB",[281,387,382],{"class":287},[281,389,390],{"class":291},")",[281,392,352],{"class":287},[281,394,355],{"class":312},[281,396,379],{"class":291},[281,398,399],{"class":305},"route",[281,401,352],{"class":287},[281,403,355],{"class":305},[281,405,390],{"class":291},[281,407,352],{"class":287},[281,409,410],{"class":312},"first",[281,412,316],{"class":291},[281,414,416,418],{"class":283,"line":415},5,[281,417,336],{"class":287},[281,419,420],{"class":305},")\n",[281,422,424,427,429],{"class":283,"line":423},6,[281,425,426],{"class":287},"\u003C/",[281,428,292],{"class":291},[281,430,295],{"class":287},[432,433,434,436,437,269],"tip",{},[250,435,80],{}," 工具可在 Vue 和 Nitro 中使用。更多关于如何在服务器端使用的信息，请查看 ",[265,438,440],{"href":439},"#server-usage","服务器端用法",[242,442,444],{"id":443},"api","API",[446,447,35],"h3",{"id":35},[271,449,453],{"className":450,"code":451,"language":452,"meta":277,"style":277},"language-ts shiki shiki-themes material-theme-lighter material-theme material-theme-palenight","function queryCollection\u003CT extends keyof Collections>(collection: T): CollectionQueryBuilder\u003CCollections[T]>\n\ninterface CollectionQueryBuilder\u003CT> {\n  where(field: keyof T | string, operator: SQLOperator, value?: unknown): CollectionQueryBuilder\u003CT>\n  andWhere(groupFactory: QueryGroupFunction\u003CT>): CollectionQueryBuilder\u003CT>\n  orWhere(groupFactory: QueryGroupFunction\u003CT>): CollectionQueryBuilder\u003CT>\n  order(field: keyof T, direction: 'ASC' | 'DESC'): CollectionQueryBuilder\u003CT>\n  // ... 其他方法\n}\n","ts",[250,454,455,510,516,532,585,615,642,692,699],{"__ignoreMap":277},[281,456,457,460,462,464,468,471,474,477,480,484,486,489,492,495,497,500,503,505,508],{"class":283,"line":284},[281,458,459],{"class":301},"function",[281,461,376],{"class":312},[281,463,288],{"class":287},[281,465,467],{"class":466},"sBMFI","T",[281,469,470],{"class":301}," extends",[281,472,473],{"class":287}," keyof",[281,475,476],{"class":466}," Collections",[281,478,479],{"class":287},">(",[281,481,483],{"class":482},"sHdIc","collection",[281,485,330],{"class":287},[281,487,488],{"class":466}," T",[281,490,491],{"class":287},"):",[281,493,494],{"class":466}," CollectionQueryBuilder",[281,496,288],{"class":287},[281,498,499],{"class":466},"Collections",[281,501,502],{"class":305},"[",[281,504,467],{"class":466},[281,506,507],{"class":305},"]",[281,509,295],{"class":287},[281,511,512],{"class":283,"line":298},[281,513,515],{"emptyLinePlaceholder":514},true,"\n",[281,517,518,521,523,525,527,530],{"class":283,"line":319},[281,519,520],{"class":301},"interface",[281,522,494],{"class":466},[281,524,288],{"class":287},[281,526,467],{"class":466},[281,528,529],{"class":287},">",[281,531,367],{"class":287},[281,533,534,537,539,542,544,546,548,551,554,556,559,561,564,566,569,572,575,577,579,581,583],{"class":283,"line":370},[281,535,536],{"class":291},"  where",[281,538,379],{"class":287},[281,540,541],{"class":482},"field",[281,543,330],{"class":287},[281,545,473],{"class":287},[281,547,488],{"class":466},[281,549,550],{"class":287}," |",[281,552,553],{"class":466}," string",[281,555,358],{"class":287},[281,557,558],{"class":482}," operator",[281,560,330],{"class":287},[281,562,563],{"class":466}," SQLOperator",[281,565,358],{"class":287},[281,567,568],{"class":482}," value",[281,570,571],{"class":287},"?:",[281,573,574],{"class":466}," unknown",[281,576,491],{"class":287},[281,578,494],{"class":466},[281,580,288],{"class":287},[281,582,467],{"class":466},[281,584,295],{"class":287},[281,586,587,590,592,595,597,600,602,604,607,609,611,613],{"class":283,"line":415},[281,588,589],{"class":291},"  andWhere",[281,591,379],{"class":287},[281,593,594],{"class":482},"groupFactory",[281,596,330],{"class":287},[281,598,599],{"class":466}," QueryGroupFunction",[281,601,288],{"class":287},[281,603,467],{"class":466},[281,605,606],{"class":287},">):",[281,608,494],{"class":466},[281,610,288],{"class":287},[281,612,467],{"class":466},[281,614,295],{"class":287},[281,616,617,620,622,624,626,628,630,632,634,636,638,640],{"class":283,"line":423},[281,618,619],{"class":291},"  orWhere",[281,621,379],{"class":287},[281,623,594],{"class":482},[281,625,330],{"class":287},[281,627,599],{"class":466},[281,629,288],{"class":287},[281,631,467],{"class":466},[281,633,606],{"class":287},[281,635,494],{"class":466},[281,637,288],{"class":287},[281,639,467],{"class":466},[281,641,295],{"class":287},[281,643,645,648,650,652,654,656,658,660,663,665,668,671,673,675,677,680,682,684,686,688,690],{"class":283,"line":644},7,[281,646,647],{"class":291},"  order",[281,649,379],{"class":287},[281,651,541],{"class":482},[281,653,330],{"class":287},[281,655,473],{"class":287},[281,657,488],{"class":466},[281,659,358],{"class":287},[281,661,662],{"class":482}," direction",[281,664,330],{"class":287},[281,666,667],{"class":287}," '",[281,669,670],{"class":385},"ASC",[281,672,382],{"class":287},[281,674,550],{"class":287},[281,676,667],{"class":287},[281,678,679],{"class":385},"DESC",[281,681,382],{"class":287},[281,683,491],{"class":287},[281,685,494],{"class":466},[281,687,288],{"class":287},[281,689,467],{"class":466},[281,691,295],{"class":287},[281,693,695],{"class":283,"line":694},8,[281,696,698],{"class":697},"sHwdD","  // ... 其他方法\n",[281,700,702],{"class":283,"line":701},9,[281,703,704],{"class":287},"}\n",[446,706,708],{"id":707},"querycollectioncollection-collectionname",[250,709,710],{},"queryCollection(collection: CollectionName)",[246,712,713],{},"创建用于查询指定集合的查询构建器。",[715,716,717],"ul",{},[718,719,720,721],"li",{},"参数：\n",[715,722,723],{},[718,724,725,727,728,730],{},[250,726,483],{},"：在 ",[250,729,255],{}," 中定义集合的键名。",[446,732,734],{"id":733},"pathpath-string",[250,735,736],{},"path(path: string)",[246,738,739,740,742,743,745,746,749],{},"搜索具有特定 ",[250,741,355],{}," 的内容。（",[250,744,355],{}," 是 ",[250,747,748],{},"page"," 集合中的特殊字段，基于文件系统路径生成，可作为渲染内容的路由）",[715,751,752],{},[718,753,720,754],{},[715,755,756],{},[718,757,758,760],{},[250,759,355],{},"：匹配的路径字符串。",[271,762,764],{"className":450,"code":763,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs').path(route.path).first()\n})\n",[250,765,766,778,809,845],{"__ignoreMap":277},[281,767,768,770,772,774,776],{"class":283,"line":284},[281,769,302],{"class":301},[281,771,306],{"class":305},[281,773,309],{"class":287},[281,775,313],{"class":312},[281,777,316],{"class":305},[281,779,780,782,784,787,789,791,793,795,797,799,801,803,805,807],{"class":283,"line":298},[281,781,302],{"class":301},[281,783,324],{"class":287},[281,785,786],{"class":305}," data ",[281,788,336],{"class":287},[281,790,339],{"class":287},[281,792,343],{"class":342},[281,794,346],{"class":312},[281,796,349],{"class":305},[281,798,352],{"class":287},[281,800,355],{"class":305},[281,802,358],{"class":287},[281,804,361],{"class":287},[281,806,364],{"class":301},[281,808,367],{"class":287},[281,810,811,813,815,817,819,821,823,825,827,829,831,833,835,837,839,841,843],{"class":283,"line":319},[281,812,373],{"class":342},[281,814,376],{"class":312},[281,816,379],{"class":291},[281,818,382],{"class":287},[281,820,259],{"class":385},[281,822,382],{"class":287},[281,824,390],{"class":291},[281,826,352],{"class":287},[281,828,355],{"class":312},[281,830,379],{"class":291},[281,832,399],{"class":305},[281,834,352],{"class":287},[281,836,355],{"class":305},[281,838,390],{"class":291},[281,840,352],{"class":287},[281,842,410],{"class":312},[281,844,316],{"class":291},[281,846,847,849],{"class":283,"line":370},[281,848,336],{"class":287},[281,850,420],{"class":305},[446,852,854],{"id":853},"selectfields-keyof-collection",[250,855,856],{},"select(...fields: keyof Collection)",[246,858,859],{},"从集合中选择特定字段返回查询结果。",[715,861,862],{},[718,863,720,864],{},[715,865,866],{},[718,867,868,871],{},[250,869,870],{},"...fields","：要从集合中选择的字段名称列表。",[271,873,875],{"className":450,"code":874,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs')\n    .select('path', 'title', 'description')\n    .first()\n})\n",[250,876,877,889,919,935,971,979],{"__ignoreMap":277},[281,878,879,881,883,885,887],{"class":283,"line":284},[281,880,302],{"class":301},[281,882,306],{"class":305},[281,884,309],{"class":287},[281,886,313],{"class":312},[281,888,316],{"class":305},[281,890,891,893,895,897,899,901,903,905,907,909,911,913,915,917],{"class":283,"line":298},[281,892,302],{"class":301},[281,894,324],{"class":287},[281,896,786],{"class":305},[281,898,336],{"class":287},[281,900,339],{"class":287},[281,902,343],{"class":342},[281,904,346],{"class":312},[281,906,349],{"class":305},[281,908,352],{"class":287},[281,910,355],{"class":305},[281,912,358],{"class":287},[281,914,361],{"class":287},[281,916,364],{"class":301},[281,918,367],{"class":287},[281,920,921,923,925,927,929,931,933],{"class":283,"line":319},[281,922,373],{"class":342},[281,924,376],{"class":312},[281,926,379],{"class":291},[281,928,382],{"class":287},[281,930,259],{"class":385},[281,932,382],{"class":287},[281,934,420],{"class":291},[281,936,937,940,943,945,947,949,951,953,955,958,960,962,964,967,969],{"class":283,"line":370},[281,938,939],{"class":287},"    .",[281,941,942],{"class":312},"select",[281,944,379],{"class":291},[281,946,382],{"class":287},[281,948,355],{"class":385},[281,950,382],{"class":287},[281,952,358],{"class":287},[281,954,667],{"class":287},[281,956,957],{"class":385},"title",[281,959,382],{"class":287},[281,961,358],{"class":287},[281,963,667],{"class":287},[281,965,966],{"class":385},"description",[281,968,382],{"class":287},[281,970,420],{"class":291},[281,972,973,975,977],{"class":283,"line":415},[281,974,939],{"class":287},[281,976,410],{"class":312},[281,978,316],{"class":291},[281,980,981,983],{"class":283,"line":423},[281,982,336],{"class":287},[281,984,420],{"class":305},[446,986,988],{"id":987},"wherefield-keyof-collection-string-operator-sqloperator-value-unknown",[250,989,990],{},"where(field: keyof Collection | string, operator: SqlOperator, value?: unknown)",[246,992,993],{},"向查询添加条件，根据特定字段筛选结果。",[715,995,996],{},[718,997,720,998],{},[715,999,1000,1005,1079],{},[718,1001,1002,1004],{},[250,1003,541],{},"：要筛选的字段。",[718,1006,1007,1010,1011],{},[250,1008,1009],{},"operator","：用于比较的 SQL 运算符。可能的值包括：\n",[715,1012,1013,1019,1025,1031,1037,1043,1049,1055,1061,1067,1073],{},[718,1014,1015,1018],{},[250,1016,1017],{},"'='","：等于",[718,1020,1021,1024],{},[250,1022,1023],{},"'>'","：大于",[718,1026,1027,1030],{},[250,1028,1029],{},"'\u003C'","：小于",[718,1032,1033,1036],{},[250,1034,1035],{},"'\u003C>'","：不等于",[718,1038,1039,1042],{},[250,1040,1041],{},"'IN'","：在列表中",[718,1044,1045,1048],{},[250,1046,1047],{},"'BETWEEN'","：在两个值之间",[718,1050,1051,1054],{},[250,1052,1053],{},"'NOT BETWEEN'","：不在两个值之间",[718,1056,1057,1060],{},[250,1058,1059],{},"'IS NULL'","：为 NULL",[718,1062,1063,1066],{},[250,1064,1065],{},"'IS NOT NULL'","：不为 NULL",[718,1068,1069,1072],{},[250,1070,1071],{},"'LIKE'","：匹配模式",[718,1074,1075,1078],{},[250,1076,1077],{},"'NOT LIKE'","：不匹配模式",[718,1080,1081,1084],{},[250,1082,1083],{},"value","：用于比较的值。类型依所用运算符不同而不同。",[271,1086,1088],{"className":450,"code":1087,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs')\n    .where('date', '\u003C', '2024-04-04')\n    .where('category', '=', 'news')\n    .all()\n})\n\n// Generated SQL\n// SELECT * FROM docs WHERE date \u003C '2024-04-04' AND category = 'news'\n",[250,1089,1090,1102,1132,1148,1183,1217,1226,1232,1236,1241],{"__ignoreMap":277},[281,1091,1092,1094,1096,1098,1100],{"class":283,"line":284},[281,1093,302],{"class":301},[281,1095,306],{"class":305},[281,1097,309],{"class":287},[281,1099,313],{"class":312},[281,1101,316],{"class":305},[281,1103,1104,1106,1108,1110,1112,1114,1116,1118,1120,1122,1124,1126,1128,1130],{"class":283,"line":298},[281,1105,302],{"class":301},[281,1107,324],{"class":287},[281,1109,786],{"class":305},[281,1111,336],{"class":287},[281,1113,339],{"class":287},[281,1115,343],{"class":342},[281,1117,346],{"class":312},[281,1119,349],{"class":305},[281,1121,352],{"class":287},[281,1123,355],{"class":305},[281,1125,358],{"class":287},[281,1127,361],{"class":287},[281,1129,364],{"class":301},[281,1131,367],{"class":287},[281,1133,1134,1136,1138,1140,1142,1144,1146],{"class":283,"line":319},[281,1135,373],{"class":342},[281,1137,376],{"class":312},[281,1139,379],{"class":291},[281,1141,382],{"class":287},[281,1143,259],{"class":385},[281,1145,382],{"class":287},[281,1147,420],{"class":291},[281,1149,1150,1152,1155,1157,1159,1162,1164,1166,1168,1170,1172,1174,1176,1179,1181],{"class":283,"line":370},[281,1151,939],{"class":287},[281,1153,1154],{"class":312},"where",[281,1156,379],{"class":291},[281,1158,382],{"class":287},[281,1160,1161],{"class":385},"date",[281,1163,382],{"class":287},[281,1165,358],{"class":287},[281,1167,667],{"class":287},[281,1169,288],{"class":385},[281,1171,382],{"class":287},[281,1173,358],{"class":287},[281,1175,667],{"class":287},[281,1177,1178],{"class":385},"2024-04-04",[281,1180,382],{"class":287},[281,1182,420],{"class":291},[281,1184,1185,1187,1189,1191,1193,1196,1198,1200,1202,1204,1206,1208,1210,1213,1215],{"class":283,"line":415},[281,1186,939],{"class":287},[281,1188,1154],{"class":312},[281,1190,379],{"class":291},[281,1192,382],{"class":287},[281,1194,1195],{"class":385},"category",[281,1197,382],{"class":287},[281,1199,358],{"class":287},[281,1201,667],{"class":287},[281,1203,309],{"class":385},[281,1205,382],{"class":287},[281,1207,358],{"class":287},[281,1209,667],{"class":287},[281,1211,1212],{"class":385},"news",[281,1214,382],{"class":287},[281,1216,420],{"class":291},[281,1218,1219,1221,1224],{"class":283,"line":423},[281,1220,939],{"class":287},[281,1222,1223],{"class":312},"all",[281,1225,316],{"class":291},[281,1227,1228,1230],{"class":283,"line":644},[281,1229,336],{"class":287},[281,1231,420],{"class":305},[281,1233,1234],{"class":283,"line":694},[281,1235,515],{"emptyLinePlaceholder":514},[281,1237,1238],{"class":283,"line":701},[281,1239,1240],{"class":697},"// Generated SQL\n",[281,1242,1244],{"class":283,"line":1243},10,[281,1245,1246],{"class":697},"// SELECT * FROM docs WHERE date \u003C '2024-04-04' AND category = 'news'\n",[446,1248,1250],{"id":1249},"andwheregroupfactory-querygroupfunctioncollection",[250,1251,1252],{},"andWhere(groupFactory: QueryGroupFunction\u003CCollection>)",[246,1254,1255],{},"向查询添加一个 AND 条件组，允许构建更复杂的查询条件。",[715,1257,1258],{},[718,1259,720,1260],{},[715,1261,1262],{},[718,1263,1264,1266],{},[250,1265,594],{},"：一个接收查询构建器的函数，可添加多个条件，这些条件将用 AND 连接组合在一起。",[271,1268,1270],{"className":450,"code":1269,"language":452,"meta":277,"style":277},"const { data } = await useAsyncData('recent-docs', () => {\n  return queryCollection('docs')\n    .where('published', '=', true)\n    .andWhere(query => query.where('date', '>', '2024-01-01').where('category', '=', 'news'))\n    .all()\n})\n\n// Generated SQL\n// SELECT * FROM docs WHERE published = true AND (date > '2024-01-01' AND category = 'news')\n",[250,1271,1272,1305,1321,1352,1431,1439,1445,1449,1453],{"__ignoreMap":277},[281,1273,1274,1276,1278,1280,1282,1284,1286,1288,1290,1292,1295,1297,1299,1301,1303],{"class":283,"line":284},[281,1275,302],{"class":301},[281,1277,324],{"class":287},[281,1279,786],{"class":305},[281,1281,336],{"class":287},[281,1283,339],{"class":287},[281,1285,343],{"class":342},[281,1287,346],{"class":312},[281,1289,379],{"class":305},[281,1291,382],{"class":287},[281,1293,1294],{"class":385},"recent-docs",[281,1296,382],{"class":287},[281,1298,358],{"class":287},[281,1300,361],{"class":287},[281,1302,364],{"class":301},[281,1304,367],{"class":287},[281,1306,1307,1309,1311,1313,1315,1317,1319],{"class":283,"line":298},[281,1308,373],{"class":342},[281,1310,376],{"class":312},[281,1312,379],{"class":291},[281,1314,382],{"class":287},[281,1316,259],{"class":385},[281,1318,382],{"class":287},[281,1320,420],{"class":291},[281,1322,1323,1325,1327,1329,1331,1334,1336,1338,1340,1342,1344,1346,1350],{"class":283,"line":319},[281,1324,939],{"class":287},[281,1326,1154],{"class":312},[281,1328,379],{"class":291},[281,1330,382],{"class":287},[281,1332,1333],{"class":385},"published",[281,1335,382],{"class":287},[281,1337,358],{"class":287},[281,1339,667],{"class":287},[281,1341,309],{"class":385},[281,1343,382],{"class":287},[281,1345,358],{"class":287},[281,1347,1349],{"class":1348},"sfNiH"," true",[281,1351,420],{"class":291},[281,1353,1354,1356,1359,1361,1364,1366,1369,1371,1373,1375,1377,1379,1381,1383,1385,1387,1389,1391,1393,1396,1398,1400,1402,1404,1406,1408,1410,1412,1414,1416,1418,1420,1422,1424,1426,1428],{"class":283,"line":370},[281,1355,939],{"class":287},[281,1357,1358],{"class":312},"andWhere",[281,1360,379],{"class":291},[281,1362,1363],{"class":482},"query",[281,1365,364],{"class":301},[281,1367,1368],{"class":305}," query",[281,1370,352],{"class":287},[281,1372,1154],{"class":312},[281,1374,379],{"class":291},[281,1376,382],{"class":287},[281,1378,1161],{"class":385},[281,1380,382],{"class":287},[281,1382,358],{"class":287},[281,1384,667],{"class":287},[281,1386,529],{"class":385},[281,1388,382],{"class":287},[281,1390,358],{"class":287},[281,1392,667],{"class":287},[281,1394,1395],{"class":385},"2024-01-01",[281,1397,382],{"class":287},[281,1399,390],{"class":291},[281,1401,352],{"class":287},[281,1403,1154],{"class":312},[281,1405,379],{"class":291},[281,1407,382],{"class":287},[281,1409,1195],{"class":385},[281,1411,382],{"class":287},[281,1413,358],{"class":287},[281,1415,667],{"class":287},[281,1417,309],{"class":385},[281,1419,382],{"class":287},[281,1421,358],{"class":287},[281,1423,667],{"class":287},[281,1425,1212],{"class":385},[281,1427,382],{"class":287},[281,1429,1430],{"class":291},"))\n",[281,1432,1433,1435,1437],{"class":283,"line":415},[281,1434,939],{"class":287},[281,1436,1223],{"class":312},[281,1438,316],{"class":291},[281,1440,1441,1443],{"class":283,"line":423},[281,1442,336],{"class":287},[281,1444,420],{"class":305},[281,1446,1447],{"class":283,"line":644},[281,1448,515],{"emptyLinePlaceholder":514},[281,1450,1451],{"class":283,"line":694},[281,1452,1240],{"class":697},[281,1454,1455],{"class":283,"line":701},[281,1456,1457],{"class":697},"// SELECT * FROM docs WHERE published = true AND (date > '2024-01-01' AND category = 'news')\n",[446,1459,1461],{"id":1460},"orwheregroupfactory-querygroupfunctioncollection",[250,1462,1463],{},"orWhere(groupFactory: QueryGroupFunction\u003CCollection>)",[246,1465,1466],{},"向查询添加一个 OR 条件组，允许构建替代的条件。",[715,1468,1469],{},[718,1470,720,1471],{},[715,1472,1473],{},[718,1474,1475,1477],{},[250,1476,594],{},"：一个接收查询构建器的函数，可添加多个条件，这些条件用 OR 连接组合在一起。",[271,1479,1481],{"className":450,"code":1480,"language":452,"meta":277,"style":277},"const { data } = await useAsyncData('featured-docs', () => {\n  return queryCollection('docs')\n    .where('published', '=', true)\n    .orWhere(query => query.where('featured', '=', true).where('priority', '>', 5))\n    .all()\n})\n\n// Generated SQL\n// SELECT * FROM docs WHERE published = true AND (featured = true OR priority > 5)\n",[250,1482,1483,1516,1532,1560,1631,1639,1645,1649,1653],{"__ignoreMap":277},[281,1484,1485,1487,1489,1491,1493,1495,1497,1499,1501,1503,1506,1508,1510,1512,1514],{"class":283,"line":284},[281,1486,302],{"class":301},[281,1488,324],{"class":287},[281,1490,786],{"class":305},[281,1492,336],{"class":287},[281,1494,339],{"class":287},[281,1496,343],{"class":342},[281,1498,346],{"class":312},[281,1500,379],{"class":305},[281,1502,382],{"class":287},[281,1504,1505],{"class":385},"featured-docs",[281,1507,382],{"class":287},[281,1509,358],{"class":287},[281,1511,361],{"class":287},[281,1513,364],{"class":301},[281,1515,367],{"class":287},[281,1517,1518,1520,1522,1524,1526,1528,1530],{"class":283,"line":298},[281,1519,373],{"class":342},[281,1521,376],{"class":312},[281,1523,379],{"class":291},[281,1525,382],{"class":287},[281,1527,259],{"class":385},[281,1529,382],{"class":287},[281,1531,420],{"class":291},[281,1533,1534,1536,1538,1540,1542,1544,1546,1548,1550,1552,1554,1556,1558],{"class":283,"line":319},[281,1535,939],{"class":287},[281,1537,1154],{"class":312},[281,1539,379],{"class":291},[281,1541,382],{"class":287},[281,1543,1333],{"class":385},[281,1545,382],{"class":287},[281,1547,358],{"class":287},[281,1549,667],{"class":287},[281,1551,309],{"class":385},[281,1553,382],{"class":287},[281,1555,358],{"class":287},[281,1557,1349],{"class":1348},[281,1559,420],{"class":291},[281,1561,1562,1564,1567,1569,1571,1573,1575,1577,1579,1581,1583,1586,1588,1590,1592,1594,1596,1598,1600,1602,1604,1606,1608,1610,1613,1615,1617,1619,1621,1623,1625,1629],{"class":283,"line":370},[281,1563,939],{"class":287},[281,1565,1566],{"class":312},"orWhere",[281,1568,379],{"class":291},[281,1570,1363],{"class":482},[281,1572,364],{"class":301},[281,1574,1368],{"class":305},[281,1576,352],{"class":287},[281,1578,1154],{"class":312},[281,1580,379],{"class":291},[281,1582,382],{"class":287},[281,1584,1585],{"class":385},"featured",[281,1587,382],{"class":287},[281,1589,358],{"class":287},[281,1591,667],{"class":287},[281,1593,309],{"class":385},[281,1595,382],{"class":287},[281,1597,358],{"class":287},[281,1599,1349],{"class":1348},[281,1601,390],{"class":291},[281,1603,352],{"class":287},[281,1605,1154],{"class":312},[281,1607,379],{"class":291},[281,1609,382],{"class":287},[281,1611,1612],{"class":385},"priority",[281,1614,382],{"class":287},[281,1616,358],{"class":287},[281,1618,667],{"class":287},[281,1620,529],{"class":385},[281,1622,382],{"class":287},[281,1624,358],{"class":287},[281,1626,1628],{"class":1627},"sbssI"," 5",[281,1630,1430],{"class":291},[281,1632,1633,1635,1637],{"class":283,"line":415},[281,1634,939],{"class":287},[281,1636,1223],{"class":312},[281,1638,316],{"class":291},[281,1640,1641,1643],{"class":283,"line":423},[281,1642,336],{"class":287},[281,1644,420],{"class":305},[281,1646,1647],{"class":283,"line":644},[281,1648,515],{"emptyLinePlaceholder":514},[281,1650,1651],{"class":283,"line":694},[281,1652,1240],{"class":697},[281,1654,1655],{"class":283,"line":701},[281,1656,1657],{"class":697},"// SELECT * FROM docs WHERE published = true AND (featured = true OR priority > 5)\n",[446,1659,1661],{"id":1660},"orderfield-keyof-collection-direction-asc-desc",[250,1662,1663],{},"order(field: keyof Collection, direction: 'ASC' | 'DESC')",[246,1665,1666],{},"根据特定字段对查询结果进行排序。",[715,1668,1669],{},[718,1670,720,1671],{},[715,1672,1673,1678],{},[718,1674,1675,1677],{},[250,1676,541],{},"：排序字段。",[718,1679,1680,1683],{},[250,1681,1682],{},"direction","：排序方向，'ASC' 表示升序，'DESC' 表示降序。",[271,1685,1687],{"className":450,"code":1686,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs')\n    .order('date', 'DESC')\n    .all()\n})\n",[250,1688,1689,1701,1731,1747,1772,1780],{"__ignoreMap":277},[281,1690,1691,1693,1695,1697,1699],{"class":283,"line":284},[281,1692,302],{"class":301},[281,1694,306],{"class":305},[281,1696,309],{"class":287},[281,1698,313],{"class":312},[281,1700,316],{"class":305},[281,1702,1703,1705,1707,1709,1711,1713,1715,1717,1719,1721,1723,1725,1727,1729],{"class":283,"line":298},[281,1704,302],{"class":301},[281,1706,324],{"class":287},[281,1708,786],{"class":305},[281,1710,336],{"class":287},[281,1712,339],{"class":287},[281,1714,343],{"class":342},[281,1716,346],{"class":312},[281,1718,349],{"class":305},[281,1720,352],{"class":287},[281,1722,355],{"class":305},[281,1724,358],{"class":287},[281,1726,361],{"class":287},[281,1728,364],{"class":301},[281,1730,367],{"class":287},[281,1732,1733,1735,1737,1739,1741,1743,1745],{"class":283,"line":319},[281,1734,373],{"class":342},[281,1736,376],{"class":312},[281,1738,379],{"class":291},[281,1740,382],{"class":287},[281,1742,259],{"class":385},[281,1744,382],{"class":287},[281,1746,420],{"class":291},[281,1748,1749,1751,1754,1756,1758,1760,1762,1764,1766,1768,1770],{"class":283,"line":370},[281,1750,939],{"class":287},[281,1752,1753],{"class":312},"order",[281,1755,379],{"class":291},[281,1757,382],{"class":287},[281,1759,1161],{"class":385},[281,1761,382],{"class":287},[281,1763,358],{"class":287},[281,1765,667],{"class":287},[281,1767,679],{"class":385},[281,1769,382],{"class":287},[281,1771,420],{"class":291},[281,1773,1774,1776,1778],{"class":283,"line":415},[281,1775,939],{"class":287},[281,1777,1223],{"class":312},[281,1779,316],{"class":291},[281,1781,1782,1784],{"class":283,"line":423},[281,1783,336],{"class":287},[281,1785,420],{"class":305},[446,1787,1789],{"id":1788},"limitlimit-number",[250,1790,1791],{},"limit(limit: number)",[246,1793,1794],{},"限制查询返回结果的数量。",[715,1796,1797],{},[718,1798,720,1799],{},[715,1800,1801],{},[718,1802,1803,1806],{},[250,1804,1805],{},"limit","：返回结果的最大数量。",[271,1808,1810],{"className":450,"code":1809,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs')\n    .limit(10)\n    .all()\n})\n",[250,1811,1812,1824,1854,1870,1883,1891],{"__ignoreMap":277},[281,1813,1814,1816,1818,1820,1822],{"class":283,"line":284},[281,1815,302],{"class":301},[281,1817,306],{"class":305},[281,1819,309],{"class":287},[281,1821,313],{"class":312},[281,1823,316],{"class":305},[281,1825,1826,1828,1830,1832,1834,1836,1838,1840,1842,1844,1846,1848,1850,1852],{"class":283,"line":298},[281,1827,302],{"class":301},[281,1829,324],{"class":287},[281,1831,786],{"class":305},[281,1833,336],{"class":287},[281,1835,339],{"class":287},[281,1837,343],{"class":342},[281,1839,346],{"class":312},[281,1841,349],{"class":305},[281,1843,352],{"class":287},[281,1845,355],{"class":305},[281,1847,358],{"class":287},[281,1849,361],{"class":287},[281,1851,364],{"class":301},[281,1853,367],{"class":287},[281,1855,1856,1858,1860,1862,1864,1866,1868],{"class":283,"line":319},[281,1857,373],{"class":342},[281,1859,376],{"class":312},[281,1861,379],{"class":291},[281,1863,382],{"class":287},[281,1865,259],{"class":385},[281,1867,382],{"class":287},[281,1869,420],{"class":291},[281,1871,1872,1874,1876,1878,1881],{"class":283,"line":370},[281,1873,939],{"class":287},[281,1875,1805],{"class":312},[281,1877,379],{"class":291},[281,1879,1880],{"class":1627},"10",[281,1882,420],{"class":291},[281,1884,1885,1887,1889],{"class":283,"line":415},[281,1886,939],{"class":287},[281,1888,1223],{"class":312},[281,1890,316],{"class":291},[281,1892,1893,1895],{"class":283,"line":423},[281,1894,336],{"class":287},[281,1896,420],{"class":305},[446,1898,1900],{"id":1899},"skipskip-number",[250,1901,1902],{},"skip(skip: number)",[246,1904,1905],{},"查询时跳过指定数量的结果。",[715,1907,1908],{},[718,1909,720,1910],{},[715,1911,1912],{},[718,1913,1914,1917],{},[250,1915,1916],{},"skip","：跳过的结果数量。",[271,1919,1921],{"className":450,"code":1920,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs')\n    // 跳过前 5 条\n    .skip(5)\n    .all()\n})\n",[250,1922,1923,1935,1965,1981,1986,1999,2007],{"__ignoreMap":277},[281,1924,1925,1927,1929,1931,1933],{"class":283,"line":284},[281,1926,302],{"class":301},[281,1928,306],{"class":305},[281,1930,309],{"class":287},[281,1932,313],{"class":312},[281,1934,316],{"class":305},[281,1936,1937,1939,1941,1943,1945,1947,1949,1951,1953,1955,1957,1959,1961,1963],{"class":283,"line":298},[281,1938,302],{"class":301},[281,1940,324],{"class":287},[281,1942,786],{"class":305},[281,1944,336],{"class":287},[281,1946,339],{"class":287},[281,1948,343],{"class":342},[281,1950,346],{"class":312},[281,1952,349],{"class":305},[281,1954,352],{"class":287},[281,1956,355],{"class":305},[281,1958,358],{"class":287},[281,1960,361],{"class":287},[281,1962,364],{"class":301},[281,1964,367],{"class":287},[281,1966,1967,1969,1971,1973,1975,1977,1979],{"class":283,"line":319},[281,1968,373],{"class":342},[281,1970,376],{"class":312},[281,1972,379],{"class":291},[281,1974,382],{"class":287},[281,1976,259],{"class":385},[281,1978,382],{"class":287},[281,1980,420],{"class":291},[281,1982,1983],{"class":283,"line":370},[281,1984,1985],{"class":697},"    // 跳过前 5 条\n",[281,1987,1988,1990,1992,1994,1997],{"class":283,"line":415},[281,1989,939],{"class":287},[281,1991,1916],{"class":312},[281,1993,379],{"class":291},[281,1995,1996],{"class":1627},"5",[281,1998,420],{"class":291},[281,2000,2001,2003,2005],{"class":283,"line":423},[281,2002,939],{"class":287},[281,2004,1223],{"class":312},[281,2006,316],{"class":291},[281,2008,2009,2011],{"class":283,"line":644},[281,2010,336],{"class":287},[281,2012,420],{"class":305},[446,2014,2015],{"id":1223},[250,2016,2017],{},"all()",[246,2019,2020],{},"执行查询并返回所有匹配结果。",[715,2022,2023],{},[718,2024,2025],{},"返回值：返回一个 Promise，解析为所有匹配的文档数组。",[271,2027,2029],{"className":450,"code":2028,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs').all()\n})\n",[250,2030,2031,2043,2073,2095],{"__ignoreMap":277},[281,2032,2033,2035,2037,2039,2041],{"class":283,"line":284},[281,2034,302],{"class":301},[281,2036,306],{"class":305},[281,2038,309],{"class":287},[281,2040,313],{"class":312},[281,2042,316],{"class":305},[281,2044,2045,2047,2049,2051,2053,2055,2057,2059,2061,2063,2065,2067,2069,2071],{"class":283,"line":298},[281,2046,302],{"class":301},[281,2048,324],{"class":287},[281,2050,786],{"class":305},[281,2052,336],{"class":287},[281,2054,339],{"class":287},[281,2056,343],{"class":342},[281,2058,346],{"class":312},[281,2060,349],{"class":305},[281,2062,352],{"class":287},[281,2064,355],{"class":305},[281,2066,358],{"class":287},[281,2068,361],{"class":287},[281,2070,364],{"class":301},[281,2072,367],{"class":287},[281,2074,2075,2077,2079,2081,2083,2085,2087,2089,2091,2093],{"class":283,"line":319},[281,2076,373],{"class":342},[281,2078,376],{"class":312},[281,2080,379],{"class":291},[281,2082,382],{"class":287},[281,2084,259],{"class":385},[281,2086,382],{"class":287},[281,2088,390],{"class":291},[281,2090,352],{"class":287},[281,2092,1223],{"class":312},[281,2094,316],{"class":291},[281,2096,2097,2099],{"class":283,"line":370},[281,2098,336],{"class":287},[281,2100,420],{"class":305},[446,2102,2103],{"id":410},[250,2104,2105],{},"first()",[246,2107,2108],{},"执行查询并返回第一个匹配结果。",[715,2110,2111],{},[718,2112,2113,2114,269],{},"返回值：返回一个 Promise，解析为第一个匹配的文档，若无匹配则为 ",[250,2115,2116],{},"null",[271,2118,2120],{"className":450,"code":2119,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs').first()\n})\n",[250,2121,2122,2134,2164,2186],{"__ignoreMap":277},[281,2123,2124,2126,2128,2130,2132],{"class":283,"line":284},[281,2125,302],{"class":301},[281,2127,306],{"class":305},[281,2129,309],{"class":287},[281,2131,313],{"class":312},[281,2133,316],{"class":305},[281,2135,2136,2138,2140,2142,2144,2146,2148,2150,2152,2154,2156,2158,2160,2162],{"class":283,"line":298},[281,2137,302],{"class":301},[281,2139,324],{"class":287},[281,2141,786],{"class":305},[281,2143,336],{"class":287},[281,2145,339],{"class":287},[281,2147,343],{"class":342},[281,2149,346],{"class":312},[281,2151,349],{"class":305},[281,2153,352],{"class":287},[281,2155,355],{"class":305},[281,2157,358],{"class":287},[281,2159,361],{"class":287},[281,2161,364],{"class":301},[281,2163,367],{"class":287},[281,2165,2166,2168,2170,2172,2174,2176,2178,2180,2182,2184],{"class":283,"line":319},[281,2167,373],{"class":342},[281,2169,376],{"class":312},[281,2171,379],{"class":291},[281,2173,382],{"class":287},[281,2175,259],{"class":385},[281,2177,382],{"class":287},[281,2179,390],{"class":291},[281,2181,352],{"class":287},[281,2183,410],{"class":312},[281,2185,316],{"class":291},[281,2187,2188,2190],{"class":283,"line":370},[281,2189,336],{"class":287},[281,2191,420],{"class":305},[446,2193,2195],{"id":2194},"count",[250,2196,2197],{},"count()",[246,2199,2200],{},"统计基于查询条件匹配的集合条目数量。",[271,2202,2204],{"className":450,"code":2203,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs')\n    // 计数匹配条目\n    .count()\n})\n\n// 返回\n5 // 匹配数量\n",[250,2205,2206,2218,2248,2264,2269,2277,2283,2287,2292],{"__ignoreMap":277},[281,2207,2208,2210,2212,2214,2216],{"class":283,"line":284},[281,2209,302],{"class":301},[281,2211,306],{"class":305},[281,2213,309],{"class":287},[281,2215,313],{"class":312},[281,2217,316],{"class":305},[281,2219,2220,2222,2224,2226,2228,2230,2232,2234,2236,2238,2240,2242,2244,2246],{"class":283,"line":298},[281,2221,302],{"class":301},[281,2223,324],{"class":287},[281,2225,786],{"class":305},[281,2227,336],{"class":287},[281,2229,339],{"class":287},[281,2231,343],{"class":342},[281,2233,346],{"class":312},[281,2235,349],{"class":305},[281,2237,352],{"class":287},[281,2239,355],{"class":305},[281,2241,358],{"class":287},[281,2243,361],{"class":287},[281,2245,364],{"class":301},[281,2247,367],{"class":287},[281,2249,2250,2252,2254,2256,2258,2260,2262],{"class":283,"line":319},[281,2251,373],{"class":342},[281,2253,376],{"class":312},[281,2255,379],{"class":291},[281,2257,382],{"class":287},[281,2259,259],{"class":385},[281,2261,382],{"class":287},[281,2263,420],{"class":291},[281,2265,2266],{"class":283,"line":370},[281,2267,2268],{"class":697},"    // 计数匹配条目\n",[281,2270,2271,2273,2275],{"class":283,"line":415},[281,2272,939],{"class":287},[281,2274,2194],{"class":312},[281,2276,316],{"class":291},[281,2278,2279,2281],{"class":283,"line":423},[281,2280,336],{"class":287},[281,2282,420],{"class":305},[281,2284,2285],{"class":283,"line":644},[281,2286,515],{"emptyLinePlaceholder":514},[281,2288,2289],{"class":283,"line":694},[281,2290,2291],{"class":697},"// 返回\n",[281,2293,2294,2296],{"class":283,"line":701},[281,2295,1996],{"class":1627},[281,2297,2298],{"class":697}," // 匹配数量\n",[246,2300,2301,2302,2304,2305,2308],{},"你也可以将 ",[250,2303,2197],{}," 与上述其他方法（如 ",[250,2306,2307],{},"where()","）结合使用，以对集合查询应用更多条件。",[271,2310,2312],{"className":450,"code":2311,"language":452,"meta":277,"style":277},"const route = useRoute()\nconst { data } = await useAsyncData(route.path, () => {\n  return queryCollection('docs')\n    .where('date', '\u003C', '2024-04-04')\n    // 计数匹配条目\n    .count()\n})\n\n// 返回\n3 // 满足条件的匹配数量\n",[250,2313,2314,2326,2356,2372,2404,2408,2416,2422,2426,2430],{"__ignoreMap":277},[281,2315,2316,2318,2320,2322,2324],{"class":283,"line":284},[281,2317,302],{"class":301},[281,2319,306],{"class":305},[281,2321,309],{"class":287},[281,2323,313],{"class":312},[281,2325,316],{"class":305},[281,2327,2328,2330,2332,2334,2336,2338,2340,2342,2344,2346,2348,2350,2352,2354],{"class":283,"line":298},[281,2329,302],{"class":301},[281,2331,324],{"class":287},[281,2333,786],{"class":305},[281,2335,336],{"class":287},[281,2337,339],{"class":287},[281,2339,343],{"class":342},[281,2341,346],{"class":312},[281,2343,349],{"class":305},[281,2345,352],{"class":287},[281,2347,355],{"class":305},[281,2349,358],{"class":287},[281,2351,361],{"class":287},[281,2353,364],{"class":301},[281,2355,367],{"class":287},[281,2357,2358,2360,2362,2364,2366,2368,2370],{"class":283,"line":319},[281,2359,373],{"class":342},[281,2361,376],{"class":312},[281,2363,379],{"class":291},[281,2365,382],{"class":287},[281,2367,259],{"class":385},[281,2369,382],{"class":287},[281,2371,420],{"class":291},[281,2373,2374,2376,2378,2380,2382,2384,2386,2388,2390,2392,2394,2396,2398,2400,2402],{"class":283,"line":370},[281,2375,939],{"class":287},[281,2377,1154],{"class":312},[281,2379,379],{"class":291},[281,2381,382],{"class":287},[281,2383,1161],{"class":385},[281,2385,382],{"class":287},[281,2387,358],{"class":287},[281,2389,667],{"class":287},[281,2391,288],{"class":385},[281,2393,382],{"class":287},[281,2395,358],{"class":287},[281,2397,667],{"class":287},[281,2399,1178],{"class":385},[281,2401,382],{"class":287},[281,2403,420],{"class":291},[281,2405,2406],{"class":283,"line":415},[281,2407,2268],{"class":697},[281,2409,2410,2412,2414],{"class":283,"line":423},[281,2411,939],{"class":287},[281,2413,2194],{"class":312},[281,2415,316],{"class":291},[281,2417,2418,2420],{"class":283,"line":644},[281,2419,336],{"class":287},[281,2421,420],{"class":305},[281,2423,2424],{"class":283,"line":694},[281,2425,515],{"emptyLinePlaceholder":514},[281,2427,2428],{"class":283,"line":701},[281,2429,2291],{"class":697},[281,2431,2432,2435],{"class":283,"line":1243},[281,2433,2434],{"class":1627},"3",[281,2436,2437],{"class":697}," // 满足条件的匹配数量\n",[242,2439,2440],{"id":2440},"示例",[246,2442,2443,2444,2446],{},"下面是一个完整示例，展示如何获取 ",[250,2445,259],{}," 集合中的文档列表。",[271,2448,2451],{"className":273,"code":2449,"filename":2450,"language":276,"meta":277,"style":277},"\u003Cscript setup lang=\"ts\">\nconst { data: docs } = await useAsyncData('documents-list', () => {\n  return queryCollection('docs')\n    .order('date', 'DESC')\n    .select('title', 'path', 'description')\n    .all()\n})\n\u003C/script>\n\n\u003Ctemplate>\n  \u003CNuxtLink v-for=\"doc in docs\" :key=\"doc.path\" :to=\"doc.path\">\n    \u003Ch2>{{ doc.title }}\u003C/h2>\n    \u003Cp>{{ doc.description }}\u003C/p>\n  \u003C/NuxtLink>\n\u003C/template>\n","index.vue",[250,2452,2453,2476,2514,2530,2554,2586,2594,2600,2608,2612,2621,2667,2686,2704,2714],{"__ignoreMap":277},[281,2454,2455,2457,2459,2462,2465,2467,2470,2472,2474],{"class":283,"line":284},[281,2456,288],{"class":287},[281,2458,292],{"class":291},[281,2460,2461],{"class":301}," setup",[281,2463,2464],{"class":301}," lang",[281,2466,309],{"class":287},[281,2468,2469],{"class":287},"\"",[281,2471,452],{"class":385},[281,2473,2469],{"class":287},[281,2475,295],{"class":287},[281,2477,2478,2480,2482,2484,2486,2489,2491,2493,2495,2497,2499,2501,2504,2506,2508,2510,2512],{"class":283,"line":298},[281,2479,302],{"class":301},[281,2481,324],{"class":287},[281,2483,327],{"class":291},[281,2485,330],{"class":287},[281,2487,2488],{"class":305}," docs ",[281,2490,336],{"class":287},[281,2492,339],{"class":287},[281,2494,343],{"class":342},[281,2496,346],{"class":312},[281,2498,379],{"class":305},[281,2500,382],{"class":287},[281,2502,2503],{"class":385},"documents-list",[281,2505,382],{"class":287},[281,2507,358],{"class":287},[281,2509,361],{"class":287},[281,2511,364],{"class":301},[281,2513,367],{"class":287},[281,2515,2516,2518,2520,2522,2524,2526,2528],{"class":283,"line":319},[281,2517,373],{"class":342},[281,2519,376],{"class":312},[281,2521,379],{"class":291},[281,2523,382],{"class":287},[281,2525,259],{"class":385},[281,2527,382],{"class":287},[281,2529,420],{"class":291},[281,2531,2532,2534,2536,2538,2540,2542,2544,2546,2548,2550,2552],{"class":283,"line":370},[281,2533,939],{"class":287},[281,2535,1753],{"class":312},[281,2537,379],{"class":291},[281,2539,382],{"class":287},[281,2541,1161],{"class":385},[281,2543,382],{"class":287},[281,2545,358],{"class":287},[281,2547,667],{"class":287},[281,2549,679],{"class":385},[281,2551,382],{"class":287},[281,2553,420],{"class":291},[281,2555,2556,2558,2560,2562,2564,2566,2568,2570,2572,2574,2576,2578,2580,2582,2584],{"class":283,"line":415},[281,2557,939],{"class":287},[281,2559,942],{"class":312},[281,2561,379],{"class":291},[281,2563,382],{"class":287},[281,2565,957],{"class":385},[281,2567,382],{"class":287},[281,2569,358],{"class":287},[281,2571,667],{"class":287},[281,2573,355],{"class":385},[281,2575,382],{"class":287},[281,2577,358],{"class":287},[281,2579,667],{"class":287},[281,2581,966],{"class":385},[281,2583,382],{"class":287},[281,2585,420],{"class":291},[281,2587,2588,2590,2592],{"class":283,"line":423},[281,2589,939],{"class":287},[281,2591,1223],{"class":312},[281,2593,316],{"class":291},[281,2595,2596,2598],{"class":283,"line":644},[281,2597,336],{"class":287},[281,2599,420],{"class":305},[281,2601,2602,2604,2606],{"class":283,"line":694},[281,2603,426],{"class":287},[281,2605,292],{"class":291},[281,2607,295],{"class":287},[281,2609,2610],{"class":283,"line":701},[281,2611,515],{"emptyLinePlaceholder":514},[281,2613,2614,2616,2619],{"class":283,"line":1243},[281,2615,288],{"class":287},[281,2617,2618],{"class":291},"template",[281,2620,295],{"class":287},[281,2622,2624,2627,2630,2633,2635,2637,2640,2642,2645,2647,2649,2652,2654,2657,2659,2661,2663,2665],{"class":283,"line":2623},11,[281,2625,2626],{"class":287},"  \u003C",[281,2628,2629],{"class":291},"NuxtLink",[281,2631,2632],{"class":301}," v-for",[281,2634,309],{"class":287},[281,2636,2469],{"class":287},[281,2638,2639],{"class":385},"doc in docs",[281,2641,2469],{"class":287},[281,2643,2644],{"class":301}," :key",[281,2646,309],{"class":287},[281,2648,2469],{"class":287},[281,2650,2651],{"class":385},"doc.path",[281,2653,2469],{"class":287},[281,2655,2656],{"class":301}," :to",[281,2658,309],{"class":287},[281,2660,2469],{"class":287},[281,2662,2651],{"class":385},[281,2664,2469],{"class":287},[281,2666,295],{"class":287},[281,2668,2670,2673,2675,2677,2680,2682,2684],{"class":283,"line":2669},12,[281,2671,2672],{"class":287},"    \u003C",[281,2674,242],{"class":291},[281,2676,529],{"class":287},[281,2678,2679],{"class":305},"{{ doc.title }}",[281,2681,426],{"class":287},[281,2683,242],{"class":291},[281,2685,295],{"class":287},[281,2687,2689,2691,2693,2695,2698,2700,2702],{"class":283,"line":2688},13,[281,2690,2672],{"class":287},[281,2692,246],{"class":291},[281,2694,529],{"class":287},[281,2696,2697],{"class":305},"{{ doc.description }}",[281,2699,426],{"class":287},[281,2701,246],{"class":291},[281,2703,295],{"class":287},[281,2705,2707,2710,2712],{"class":283,"line":2706},14,[281,2708,2709],{"class":287},"  \u003C/",[281,2711,2629],{"class":291},[281,2713,295],{"class":287},[281,2715,2717,2719,2721],{"class":283,"line":2716},15,[281,2718,426],{"class":287},[281,2720,2618],{"class":291},[281,2722,295],{"class":287},[242,2724,440],{"id":440},[246,2726,2727,2728,2731,2732,2734],{},"Nuxt Content 提供了类似的工具用于在服务器端查询集合。唯一区别是你需要将 ",[250,2729,2730],{},"event"," 作为第一个参数传给 ",[250,2733,80],{}," 函数。",[271,2736,2739],{"className":450,"code":2737,"filename":2738,"language":452,"meta":277,"style":277},"export default eventHandler(async (event) => {\n  const { slug } = getRouterParams(event)\n  const page = await queryCollection(event, 'docs').path(slug).first()\n  return page\n})\n","server/api/[slug].ts",[250,2740,2741,2768,2792,2836,2843],{"__ignoreMap":277},[281,2742,2743,2746,2749,2752,2754,2757,2760,2762,2764,2766],{"class":283,"line":284},[281,2744,2745],{"class":342},"export",[281,2747,2748],{"class":342}," default",[281,2750,2751],{"class":312}," eventHandler",[281,2753,379],{"class":305},[281,2755,2756],{"class":301},"async",[281,2758,2759],{"class":287}," (",[281,2761,2730],{"class":482},[281,2763,390],{"class":287},[281,2765,364],{"class":301},[281,2767,367],{"class":287},[281,2769,2770,2773,2775,2778,2781,2783,2786,2788,2790],{"class":283,"line":298},[281,2771,2772],{"class":301},"  const",[281,2774,324],{"class":287},[281,2776,2777],{"class":305}," slug",[281,2779,2780],{"class":287}," }",[281,2782,339],{"class":287},[281,2784,2785],{"class":312}," getRouterParams",[281,2787,379],{"class":291},[281,2789,2730],{"class":305},[281,2791,420],{"class":291},[281,2793,2794,2796,2799,2801,2803,2805,2807,2809,2811,2813,2815,2817,2819,2821,2823,2825,2828,2830,2832,2834],{"class":283,"line":319},[281,2795,2772],{"class":301},[281,2797,2798],{"class":305}," page",[281,2800,339],{"class":287},[281,2802,343],{"class":342},[281,2804,376],{"class":312},[281,2806,379],{"class":291},[281,2808,2730],{"class":305},[281,2810,358],{"class":287},[281,2812,667],{"class":287},[281,2814,259],{"class":385},[281,2816,382],{"class":287},[281,2818,390],{"class":291},[281,2820,352],{"class":287},[281,2822,355],{"class":312},[281,2824,379],{"class":291},[281,2826,2827],{"class":305},"slug",[281,2829,390],{"class":291},[281,2831,352],{"class":287},[281,2833,410],{"class":312},[281,2835,316],{"class":291},[281,2837,2838,2840],{"class":283,"line":370},[281,2839,373],{"class":342},[281,2841,2842],{"class":305}," page\n",[281,2844,2845,2847],{"class":283,"line":415},[281,2846,336],{"class":287},[281,2848,420],{"class":305},[2850,2851,2852,2859],"note",{},[246,2853,2854,2855,2858],{},"确保创建 ",[250,2856,2857],{},"server/tsconfig.json"," 文件，并包含以下内容以避免类型错误：",[271,2860,2864],{"className":2861,"code":2862,"language":2863,"meta":277,"style":277},"language-json shiki shiki-themes material-theme-lighter material-theme material-theme-palenight","{\n  \"extends\": \"../.nuxt/tsconfig.server.json\"\n}\n","json",[250,2865,2866,2871,2892],{"__ignoreMap":277},[281,2867,2868],{"class":283,"line":284},[281,2869,2870],{"class":287},"{\n",[281,2872,2873,2876,2879,2881,2883,2886,2889],{"class":283,"line":298},[281,2874,2875],{"class":287},"  \"",[281,2877,2878],{"class":301},"extends",[281,2880,2469],{"class":287},[281,2882,330],{"class":287},[281,2884,2885],{"class":287}," \"",[281,2887,2888],{"class":385},"../.nuxt/tsconfig.server.json",[281,2890,2891],{"class":287},"\"\n",[281,2893,2894],{"class":283,"line":319},[281,2895,704],{"class":287},[2897,2898,2899],"style",{},"html pre.shiki code .sMK4o, html code.shiki .sMK4o{--shiki-light:#39ADB5;--shiki-default:#89DDFF;--shiki-dark:#89DDFF}html pre.shiki code .swJcz, html code.shiki .swJcz{--shiki-light:#E53935;--shiki-default:#F07178;--shiki-dark:#F07178}html pre.shiki code .spNyl, html code.shiki .spNyl{--shiki-light:#9C3EDA;--shiki-default:#C792EA;--shiki-dark:#C792EA}html pre.shiki code .sTEyZ, html code.shiki .sTEyZ{--shiki-light:#90A4AE;--shiki-default:#EEFFFF;--shiki-dark:#BABED8}html pre.shiki code .s2Zo4, html code.shiki .s2Zo4{--shiki-light:#6182B8;--shiki-default:#82AAFF;--shiki-dark:#82AAFF}html pre.shiki code .s7zQu, html code.shiki .s7zQu{--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#89DDFF;--shiki-default-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic}html pre.shiki code .sfazB, html code.shiki .sfazB{--shiki-light:#91B859;--shiki-default:#C3E88D;--shiki-dark:#C3E88D}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sBMFI, html code.shiki .sBMFI{--shiki-light:#E2931D;--shiki-default:#FFCB6B;--shiki-dark:#FFCB6B}html pre.shiki code .sHdIc, html code.shiki .sHdIc{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#EEFFFF;--shiki-default-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic}html pre.shiki code .sHwdD, html code.shiki .sHwdD{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#546E7A;--shiki-default-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic}html pre.shiki code .sfNiH, html code.shiki .sfNiH{--shiki-light:#FF5370;--shiki-default:#FF9CAC;--shiki-dark:#FF9CAC}html pre.shiki code .sbssI, html code.shiki .sbssI{--shiki-light:#F76D47;--shiki-default:#F78C6C;--shiki-dark:#F78C6C}",{"title":277,"searchDepth":298,"depth":298,"links":2901},[2902,2903,2918,2919],{"id":244,"depth":298,"text":244},{"id":443,"depth":298,"text":444,"children":2904},[2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917],{"id":35,"depth":319,"text":35},{"id":707,"depth":319,"text":710},{"id":733,"depth":319,"text":736},{"id":853,"depth":319,"text":856},{"id":987,"depth":319,"text":990},{"id":1249,"depth":319,"text":1252},{"id":1460,"depth":319,"text":1463},{"id":1660,"depth":319,"text":1663},{"id":1788,"depth":319,"text":1791},{"id":1899,"depth":319,"text":1902},{"id":1223,"depth":319,"text":2017},{"id":410,"depth":319,"text":2105},{"id":2194,"depth":319,"text":2197},{"id":2440,"depth":298,"text":2440},{"id":440,"depth":298,"text":440},"queryCollection 组合函数提供用于查询和获取集合内容的方法。","md",null,{},{"title":80,"description":2920},"epOjS1cJyRwAgcJIPmnfwjlOxUHzaCO3R6YJMV4EcKo",[2927,2929],{"title":70,"path":71,"stem":72,"description":2928,"children":-1},"如何定义、编写和查询 CSV 数据。",{"title":84,"path":85,"stem":86,"description":2930,"children":-1},"queryCollectionNavigation 组合函数生成给定集合的导航树。",1757738953573]