function isArray(e){return Array.isArray?Array.isArray(e):"[object Array]"===getTag(e)}function isString(e){return"string"==typeof e}function isNumber(e){return"number"==typeof e}function isBoolean(e){return!0===e||!1===e||function(e){return isObject(e)&&null!==e}(e)&&"[object Boolean]"==getTag(e)}function isObject(e){return"object"==typeof e}function isDefined(e){return null!=e}function isBlank(e){return!e.trim().length}function getTag(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Object.prototype.toString.call(e)}const e=Object.prototype.hasOwnProperty;class KeyStore{constructor(e){this._keys=[],this._keyMap={};let t=0;e.forEach(e=>{let s=createKey(e);this._keys.push(s),this._keyMap[s.id]=s,t+=s.weight}),this._keys.forEach(e=>{e.weight/=t})}get(e){return this._keyMap[e]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}}function createKey(t){let s=null,i=null,n=null,r=1,c=null;if(isString(t)||isArray(t))n=t,s=createKeyPath(t),i=createKeyId(t);else{if(!e.call(t,"name"))throw new Error((e=>`Missing ${e} property in key`)("name"));const u=t.name;if(n=u,e.call(t,"weight")&&(r=t.weight,r<=0))throw new Error((e=>`Property 'weight' in key '${e}' must be a positive integer`)(u));s=createKeyPath(u),i=createKeyId(u),c=t.getFn}return{path:s,id:i,weight:r,src:n,getFn:c}}function createKeyPath(e){return isArray(e)?e:e.split(".")}function createKeyId(e){return isArray(e)?e.join("."):e}var t={isCaseSensitive:!1,ignoreDiacritics:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(e,t)=>e.score===t.score?e.idx<t.idx?-1:1:e.score<t.score?-1:1,includeMatches:!1,findAllMatches:!1,minMatchCharLength:1,location:0,threshold:.6,distance:100,...{useExtendedSearch:!1,getFn:function(e,t){let s=[],i=!1;const deepGet=(e,t,n)=>{if(isDefined(e))if(t[n]){const r=e[t[n]];if(!isDefined(r))return;if(n===t.length-1&&(isString(r)||isNumber(r)||isBoolean(r)))s.push(function(e){return null==e?"":function(e){if("string"==typeof e)return e;let t=e+"";return"0"==t&&1/e==-1/0?"-0":t}(e)}(r));else if(isArray(r)){i=!0;for(let e=0,s=r.length;e<s;e+=1)deepGet(r[e],t,n+1)}else t.length&&deepGet(r,t,n+1)}else s.push(e)};return deepGet(e,isString(t)?t.split("."):t,0),i?s:s[0]},ignoreLocation:!1,ignoreFieldNorm:!1,fieldNormWeight:1}};const s=/[^ ]+/g;class FuseIndex{constructor({getFn:e=t.getFn,fieldNormWeight:i=t.fieldNormWeight}={}){this.norm=function(e=1,t=3){const i=new Map,n=Math.pow(10,t);return{get(t){const r=t.match(s).length;if(i.has(r))return i.get(r);const c=1/Math.pow(r,.5*e),u=parseFloat(Math.round(c*n)/n);return i.set(r,u),u},clear(){i.clear()}}}(i,3),this.getFn=e,this.isCreated=!1,this.setIndexRecords()}setSources(e=[]){this.docs=e}setIndexRecords(e=[]){this.records=e}setKeys(e=[]){this.keys=e,this._keysMap={},e.forEach((e,t)=>{this._keysMap[e.id]=t})}create(){!this.isCreated&&this.docs.length&&(this.isCreated=!0,isString(this.docs[0])?this.docs.forEach((e,t)=>{this._addString(e,t)}):this.docs.forEach((e,t)=>{this._addObject(e,t)}),this.norm.clear())}add(e){const t=this.size();isString(e)?this._addString(e,t):this._addObject(e,t)}removeAt(e){this.records.splice(e,1);for(let t=e,s=this.size();t<s;t+=1)this.records[t].i-=1}getValueForItemAtKeyId(e,t){return e[this._keysMap[t]]}size(){return this.records.length}_addString(e,t){if(!isDefined(e)||isBlank(e))return;let s={v:e,i:t,n:this.norm.get(e)};this.records.push(s)}_addObject(e,t){let s={i:t,$:{}};this.keys.forEach((t,i)=>{let n=t.getFn?t.getFn(e):this.getFn(e,t.path);if(isDefined(n))if(isArray(n)){let e=[];const t=[{nestedArrIndex:-1,value:n}];for(;t.length;){const{nestedArrIndex:s,value:i}=t.pop();if(isDefined(i))if(isString(i)&&!isBlank(i)){let t={v:i,i:s,n:this.norm.get(i)};e.push(t)}else isArray(i)&&i.forEach((e,s)=>{t.push({nestedArrIndex:s,value:e})})}s.$[i]=e}else if(isString(n)&&!isBlank(n)){let e={v:n,n:this.norm.get(n)};s.$[i]=e}}),this.records.push(s)}toJSON(){return{keys:this.keys,records:this.records}}}function createIndex(e,s,{getFn:i=t.getFn,fieldNormWeight:n=t.fieldNormWeight}={}){const r=new FuseIndex({getFn:i,fieldNormWeight:n});return r.setKeys(e.map(createKey)),r.setSources(s),r.create(),r}function computeScore$1(e,{errors:s=0,currentLocation:i=0,expectedLocation:n=0,distance:r=t.distance,ignoreLocation:c=t.ignoreLocation}={}){const u=s/e.length;if(c)return u;const o=Math.abs(n-i);return r?u+o/r:o?1:u}const i=32;function search(e,s,n,{location:r=t.location,distance:c=t.distance,threshold:u=t.threshold,findAllMatches:o=t.findAllMatches,minMatchCharLength:a=t.minMatchCharLength,includeMatches:h=t.includeMatches,ignoreLocation:l=t.ignoreLocation}={}){if(s.length>i)throw new Error(`Pattern length exceeds max of ${i}.`);const d=s.length,g=e.length,f=Math.max(0,Math.min(r,g));let A=u,p=f;const C=a>1||h,m=C?Array(g):[];let M;for(;(M=e.indexOf(s,p))>-1;){let e=computeScore$1(s,{currentLocation:M,expectedLocation:f,distance:c,ignoreLocation:l});if(A=Math.min(e,A),p=M+d,C){let e=0;for(;e<d;)m[M+e]=1,e+=1}}p=-1;let y=[],F=1,B=d+g;const D=1<<d-1;for(let t=0;t<d;t+=1){let i=0,r=B;for(;i<r;){computeScore$1(s,{errors:t,currentLocation:f+r,expectedLocation:f,distance:c,ignoreLocation:l})<=A?i=r:B=r,r=Math.floor((B-i)/2+i)}B=r;let u=Math.max(1,f-r+1),a=o?g:Math.min(f+r,g)+d,h=Array(a+2);h[a+1]=(1<<t)-1;for(let i=a;i>=u;i-=1){let r=i-1,o=n[e.charAt(r)];if(C&&(m[r]=+!!o),h[i]=(h[i+1]<<1|1)&o,t&&(h[i]|=(y[i+1]|y[i])<<1|1|y[i+1]),h[i]&D&&(F=computeScore$1(s,{errors:t,currentLocation:r,expectedLocation:f,distance:c,ignoreLocation:l}),F<=A)){if(A=F,p=r,p<=f)break;u=Math.max(1,2*f-p)}}if(computeScore$1(s,{errors:t+1,currentLocation:f,expectedLocation:f,distance:c,ignoreLocation:l})>A)break;y=h}const x={isMatch:p>=0,score:Math.max(.001,F)};if(C){const e=function(e=[],s=t.minMatchCharLength){let i=[],n=-1,r=-1,c=0;for(let t=e.length;c<t;c+=1){let t=e[c];t&&-1===n?n=c:t||-1===n||(r=c-1,r-n+1>=s&&i.push([n,r]),n=-1)}return e[c-1]&&c-n>=s&&i.push([n,c-1]),i}(m,a);e.length?h&&(x.indices=e):x.isMatch=!1}return x}function createPatternAlphabet(e){let t={};for(let s=0,i=e.length;s<i;s+=1){const n=e.charAt(s);t[n]=(t[n]||0)|1<<i-s-1}return t}const n=String.prototype.normalize?e=>e.normalize("NFD").replace(/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u192B\u1930-\u193B\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F]/g,""):e=>e;class BitapSearch{constructor(e,{location:s=t.location,threshold:r=t.threshold,distance:c=t.distance,includeMatches:u=t.includeMatches,findAllMatches:o=t.findAllMatches,minMatchCharLength:a=t.minMatchCharLength,isCaseSensitive:h=t.isCaseSensitive,ignoreDiacritics:l=t.ignoreDiacritics,ignoreLocation:d=t.ignoreLocation}={}){if(this.options={location:s,threshold:r,distance:c,includeMatches:u,findAllMatches:o,minMatchCharLength:a,isCaseSensitive:h,ignoreDiacritics:l,ignoreLocation:d},e=h?e:e.toLowerCase(),e=l?n(e):e,this.pattern=e,this.chunks=[],!this.pattern.length)return;const addChunk=(e,t)=>{this.chunks.push({pattern:e,alphabet:createPatternAlphabet(e),startIndex:t})},g=this.pattern.length;if(g>i){let e=0;const t=g%i,s=g-t;for(;e<s;)addChunk(this.pattern.substr(e,i),e),e+=i;if(t){const e=g-i;addChunk(this.pattern.substr(e),e)}}else addChunk(this.pattern,0)}searchIn(e){const{isCaseSensitive:t,ignoreDiacritics:s,includeMatches:i}=this.options;if(e=t?e:e.toLowerCase(),e=s?n(e):e,this.pattern===e){let t={isMatch:!0,score:0};return i&&(t.indices=[[0,e.length-1]]),t}const{location:r,distance:c,threshold:u,findAllMatches:o,minMatchCharLength:a,ignoreLocation:h}=this.options;let l=[],d=0,g=!1;this.chunks.forEach(({pattern:t,alphabet:s,startIndex:n})=>{const{isMatch:f,score:A,indices:p}=search(e,t,s,{location:r+n,distance:c,threshold:u,findAllMatches:o,minMatchCharLength:a,includeMatches:i,ignoreLocation:h});f&&(g=!0),d+=A,f&&p&&(l=[...l,...p])});let f={isMatch:g,score:g?d/this.chunks.length:1};return g&&i&&(f.indices=l),f}}class BaseMatch{constructor(e){this.pattern=e}static isMultiMatch(e){return getMatch(e,this.multiRegex)}static isSingleMatch(e){return getMatch(e,this.singleRegex)}search(){}}function getMatch(e,t){const s=e.match(t);return s?s[1]:null}class FuzzyMatch extends BaseMatch{constructor(e,{location:s=t.location,threshold:i=t.threshold,distance:n=t.distance,includeMatches:r=t.includeMatches,findAllMatches:c=t.findAllMatches,minMatchCharLength:u=t.minMatchCharLength,isCaseSensitive:o=t.isCaseSensitive,ignoreDiacritics:a=t.ignoreDiacritics,ignoreLocation:h=t.ignoreLocation}={}){super(e),this._bitapSearch=new BitapSearch(e,{location:s,threshold:i,distance:n,includeMatches:r,findAllMatches:c,minMatchCharLength:u,isCaseSensitive:o,ignoreDiacritics:a,ignoreLocation:h})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(e){return this._bitapSearch.searchIn(e)}}class IncludeMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"include"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(e){let t,s=0;const i=[],n=this.pattern.length;for(;(t=e.indexOf(this.pattern,s))>-1;)s=t+n,i.push([t,s-1]);const r=!!i.length;return{isMatch:r,score:r?0:1,indices:i}}}const r=[class extends BaseMatch{constructor(e){super(e)}static get type(){return"exact"}static get multiRegex(){return/^="(.*)"$/}static get singleRegex(){return/^=(.*)$/}search(e){const t=e===this.pattern;return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}},IncludeMatch,class extends BaseMatch{constructor(e){super(e)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(e){const t=e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}},class extends BaseMatch{constructor(e){super(e)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(e){const t=!e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}},class extends BaseMatch{constructor(e){super(e)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(e){const t=!e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}},class extends BaseMatch{constructor(e){super(e)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(e){const t=e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[e.length-this.pattern.length,e.length-1]}}},class extends BaseMatch{constructor(e){super(e)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(e){const t=-1===e.indexOf(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}},FuzzyMatch],c=r.length,u=/ +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;const o=new Set([FuzzyMatch.type,IncludeMatch.type]);class ExtendedSearch{constructor(e,{isCaseSensitive:s=t.isCaseSensitive,ignoreDiacritics:i=t.ignoreDiacritics,includeMatches:o=t.includeMatches,minMatchCharLength:a=t.minMatchCharLength,ignoreLocation:h=t.ignoreLocation,findAllMatches:l=t.findAllMatches,location:d=t.location,threshold:g=t.threshold,distance:f=t.distance}={}){this.query=null,this.options={isCaseSensitive:s,ignoreDiacritics:i,includeMatches:o,minMatchCharLength:a,findAllMatches:l,ignoreLocation:h,location:d,threshold:g,distance:f},e=s?e:e.toLowerCase(),e=i?n(e):e,this.pattern=e,this.query=function(e,t={}){return e.split("|").map(e=>{let s=e.trim().split(u).filter(e=>e&&!!e.trim()),i=[];for(let e=0,n=s.length;e<n;e+=1){const n=s[e];let u=!1,o=-1;for(;!u&&++o<c;){const e=r[o];let s=e.isMultiMatch(n);s&&(i.push(new e(s,t)),u=!0)}if(!u)for(o=-1;++o<c;){const e=r[o];let s=e.isSingleMatch(n);if(s){i.push(new e(s,t));break}}}return i})}(this.pattern,this.options)}static condition(e,t){return t.useExtendedSearch}searchIn(e){const t=this.query;if(!t)return{isMatch:!1,score:1};const{includeMatches:s,isCaseSensitive:i,ignoreDiacritics:r}=this.options;e=i?e:e.toLowerCase(),e=r?n(e):e;let c=0,u=[],a=0;for(let i=0,n=t.length;i<n;i+=1){const n=t[i];u.length=0,c=0;for(let t=0,i=n.length;t<i;t+=1){const i=n[t],{isMatch:r,indices:h,score:l}=i.search(e);if(!r){a=0,c=0,u.length=0;break}if(c+=1,a+=l,s){const e=i.constructor.type;o.has(e)?u=[...u,...h]:u.push(h)}}if(c){let e={isMatch:!0,score:a/c};return s&&(e.indices=u),e}}return{isMatch:!1,score:1}}}const a=[];function createSearcher(e,t){for(let s=0,i=a.length;s<i;s+=1){let i=a[s];if(i.condition(e,t))return new i(e,t)}return new BitapSearch(e,t)}const h="$and",l="$or",d="$path",g="$val",isExpression=e=>!(!e[h]&&!e[l]),convertToExplicit=e=>({[h]:Object.keys(e).map(t=>({[t]:e[t]}))});function parse(e,t,{auto:s=!0}={}){const next=e=>{let i=Object.keys(e);const n=(e=>!!e[d])(e);if(!n&&i.length>1&&!isExpression(e))return next(convertToExplicit(e));if((e=>!isArray(e)&&isObject(e)&&!isExpression(e))(e)){const r=n?e[d]:i[0],c=n?e[g]:e[r];if(!isString(c))throw new Error((e=>`Invalid value for key ${e}`)(r));const u={keyId:createKeyId(r),pattern:c};return s&&(u.searcher=createSearcher(c,t)),u}let r={children:[],operator:i[0]};return i.forEach(t=>{const s=e[t];isArray(s)&&s.forEach(e=>{r.children.push(next(e))})}),r};return isExpression(e)||(e=convertToExplicit(e)),next(e)}function transformMatches(e,t){const s=e.matches;t.matches=[],isDefined(s)&&s.forEach(e=>{if(!isDefined(e.indices)||!e.indices.length)return;const{indices:s,value:i}=e;let n={indices:s,value:i};e.key&&(n.key=e.key.src),e.idx>-1&&(n.refIndex=e.idx),t.matches.push(n)})}function transformScore(e,t){t.score=e.score}class Fuse{constructor(e,s={},i){this.options={...t,...s},this.options.useExtendedSearch,this._keyStore=new KeyStore(this.options.keys),this.setCollection(e,i)}setCollection(e,t){if(this._docs=e,t&&!(t instanceof FuseIndex))throw new Error("Incorrect 'index' type");this._myIndex=t||createIndex(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(e){isDefined(e)&&(this._docs.push(e),this._myIndex.add(e))}remove(e=()=>!1){const t=[];for(let s=0,i=this._docs.length;s<i;s+=1){const n=this._docs[s];e(n,s)&&(this.removeAt(s),s-=1,i-=1,t.push(n))}return t}removeAt(e){this._docs.splice(e,1),this._myIndex.removeAt(e)}getIndex(){return this._myIndex}search(e,{limit:s=-1}={}){const{includeMatches:i,includeScore:n,shouldSort:r,sortFn:c,ignoreFieldNorm:u}=this.options;let o=isString(e)?isString(this._docs[0])?this._searchStringList(e):this._searchObjectList(e):this._searchLogical(e);return function(e,{ignoreFieldNorm:s=t.ignoreFieldNorm}){e.forEach(e=>{let t=1;e.matches.forEach(({key:e,norm:i,score:n})=>{const r=e?e.weight:null;t*=Math.pow(0===n&&r?Number.EPSILON:n,(r||1)*(s?1:i))}),e.score=t})}(o,{ignoreFieldNorm:u}),r&&o.sort(c),isNumber(s)&&s>-1&&(o=o.slice(0,s)),function(e,s,{includeMatches:i=t.includeMatches,includeScore:n=t.includeScore}={}){const r=[];return i&&r.push(transformMatches),n&&r.push(transformScore),e.map(e=>{const{idx:t}=e,i={item:s[t],refIndex:t};return r.length&&r.forEach(t=>{t(e,i)}),i})}(o,this._docs,{includeMatches:i,includeScore:n})}_searchStringList(e){const t=createSearcher(e,this.options),{records:s}=this._myIndex,i=[];return s.forEach(({v:e,i:s,n:n})=>{if(!isDefined(e))return;const{isMatch:r,score:c,indices:u}=t.searchIn(e);r&&i.push({item:e,idx:s,matches:[{score:c,value:e,norm:n,indices:u}]})}),i}_searchLogical(e){const t=parse(e,this.options),evaluate=(e,t,s)=>{if(!e.children){const{keyId:i,searcher:n}=e,r=this._findMatches({key:this._keyStore.get(i),value:this._myIndex.getValueForItemAtKeyId(t,i),searcher:n});return r&&r.length?[{idx:s,item:t,matches:r}]:[]}const i=[];for(let n=0,r=e.children.length;n<r;n+=1){const r=e.children[n],c=evaluate(r,t,s);if(c.length)i.push(...c);else if(e.operator===h)return[]}return i},s=this._myIndex.records,i={},n=[];return s.forEach(({$:e,i:s})=>{if(isDefined(e)){let r=evaluate(t,e,s);r.length&&(i[s]||(i[s]={idx:s,item:e,matches:[]},n.push(i[s])),r.forEach(({matches:e})=>{i[s].matches.push(...e)}))}}),n}_searchObjectList(e){const t=createSearcher(e,this.options),{keys:s,records:i}=this._myIndex,n=[];return i.forEach(({$:e,i:i})=>{if(!isDefined(e))return;let r=[];s.forEach((s,i)=>{r.push(...this._findMatches({key:s,value:e[i],searcher:t}))}),r.length&&n.push({idx:i,item:e,matches:r})}),n}_findMatches({key:e,value:t,searcher:s}){if(!isDefined(t))return[];let i=[];if(isArray(t))t.forEach(({v:t,i:n,n:r})=>{if(!isDefined(t))return;const{isMatch:c,score:u,indices:o}=s.searchIn(t);c&&i.push({score:u,key:e,value:t,idx:n,norm:r,indices:o})});else{const{v:n,n:r}=t,{isMatch:c,score:u,indices:o}=s.searchIn(n);c&&i.push({score:u,key:e,value:n,norm:r,indices:o})}return i}}Fuse.version="7.1.0",Fuse.createIndex=createIndex,Fuse.parseIndex=function(e,{getFn:s=t.getFn,fieldNormWeight:i=t.fieldNormWeight}={}){const{keys:n,records:r}=e,c=new FuseIndex({getFn:s,fieldNormWeight:i});return c.setKeys(n),c.setIndexRecords(r),c},Fuse.config=t,Fuse.parseQuery=parse,function(...e){a.push(...e)}(ExtendedSearch);export{Fuse as F};
//# sourceMappingURL=fuse.mjs.map
